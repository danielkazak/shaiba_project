Hall of fame
------------

DONE:
- User experience flow
    1. User picks rating
    2. Rating changes accordingly
    3. Sentence is being sorted according to new rating
    4. The sentence is being followed (focused upon)
    5. The sentence row color is being changed to "Attempting status" (yellow - css, fading blinking work)
    6.
        6.1 Once the prior step (5) is done, means the change was posted to parse, then change row's color to "Success status" (green)
            6.1.1 Return row to normal state.
        6.2  If the prior step (5) returned error, change row's color to "Error status" (red)
            6.2.1 Return sentence to prior rank
            6.2.2 Return sentence's row to prior position
            6.2.3 Return to normal state
    7. Alert the user accordingly


- Users' Restrictions
    1. DONE: Disable rating if no user connected
    2. DONE: If a user connects, disable the rating for the rows that already had been rated by the user
    3. DONE: When a user rate a sentence, add this information to parse
        3.1 DONE: We should decide whether we should manage a table that holds all the user-sentence combinations
            or add an array of users to the best's table.

 - ADD INFINITE SCROLLER FOR SENTENCES INSIDE THE HALL

 - DONE (the problem was in the for loop that decide whether the sentence should be readonly): I've notices a bug today.
   When i was logged in as Michael in incognito mode on chrome and added a sentence, i could refresh the page and give
   that sentence a rate. I could do it more than once. Maybe it got something to do with the way facebook works in
   incognito mode.

Facebook Service
----------------

1. DONE: Sort out the logout issue (How to log out the user from the site but not from facebook?)
2. DONE: Review the current design of the Facebook Service (whether to work with $rootScope needed or not?)

Educate: Review ngFacebook's code, focus on $q.defer() and FB sessions & tokens.


Main.js/html
-------

1. DONE: (learn about using $rootScope.)Allow adding a sentence (only if there's an active user) to the hall of fame.
2. Consider restrictions for the above (e.g.: How many additions per day?)
3. DONE: When user tries to add a sentence we should check if it already exists.
3. NOT-NEEDED: Add [ENTER] key listener to generate sentence.
4. DONE-not_applicable: Add site to favorites (button)
5. DONE: Validate sentence in hall of fame
6. Add CELEBRATIONS if a sentence got favorited

Settings.js
-----------

1. DONE: (should add some hebrew\numbers\white spaces validations with regex) Valid word validation
2. Word recognition (e.g.: Male/Female relation)
    2.1 When adding a dish we should ask the user if it's male/female and if it's plural/single. We'd do it by adding 4
    options to the dish which represents one of the nations as male/female/plural/single, and let him choose what works
    the best.
    2.2 When adding a nation, we should tell the user that it suppose to represents one male dish, and add one male
    specific dish infront of the nation and ask him if it works. If not he can change it.
    2.3 When adding a adjective we would generate 4 sentences with that adjective, one for each option and ask the user
    which of them is ok. if it's not all of them, we'd ask him to add the right sentence for the rest.
3. Show a dropdown of all the words that begins the same way, so the user could see if it already exists. (need to
   check if we could use angular-ui's typeahead for this).

Future
-------
1. Choose category: Food / Technology / Science
2. Share + like on facebook
3. DONE: Shaiba face animation upon generate
4. Secure data (ask Dotan)
5. User reward system
6. DONE: Initialize the tables when the app bootstraps. (now its in Index.html)
7. Open the option to log in to the site as admins (for Kazak, Doron etc.) and to enable us to review all of the words,
   all of the hall of fame sentences, and the marked by users' words and stuff like that. Of course we should be able
   to delete fucked up words from the site.
8. Question - how come i can access parse.best table from the HallCtrl... Need to figure out how it works, and what's
   the difference between a factory and a service then.